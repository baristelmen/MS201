@Parser    Implicit;
@Behaviour SimpleNorton;
@Author    Baris Telmen;
@Description{
  Implementation of extended Norton creep law
};

@Algorithm NewtonRaphson_NumericalJacobian;
@RequireStiffnessTensor;
@MaterialProperty real A;
@MaterialProperty real m;
@StateVariable real p;

@ComputeStress{
	sig=D*eel;
}

@Integrator{
	real seq = sigmaeq(sig);
	Stensor n = Stensor(0.);
	if(seq > 1.e-12){
		n=1.5*deviator(sig)/seq;
	}
	feel += dp*n-deto;
	fp -= dt*A*pow(seq,m);
}//endof@Integrator
@TangentOperator{
Stensor4 Je;
getPartialJacobianInvert(Je);
Dt=D*Je;
}
